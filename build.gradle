plugins {
    // id "com.github.spotbugs" version "4.5.1"
    id "checkstyle"
}

apply plugin: 'application'
apply plugin: 'jacoco'

mainClassName = 'main/java/memoranda/Start'

compileJava.options.encoding = 'UTF-8'

// Repositories and dependencies for code go here
repositories {
  mavenCentral()
}

build.dependsOn jacocoTestReport

dependencies {
    implementation "junit:junit:4.12"
    implementation 'com.io7m.xom:xom:1.2.+'
    implementation 'net.sourceforge.nekohtml:nekohtml:1.9.+'
    implementation 'org.json:json:20171018'
    implementation 'com.google.code.gson:gson:2.8.6'
    testImplementation project(path: ':')
    implementation files('cls/')
}

jacocoTestReport {
    dependsOn test // tests are required to run before generating the report
}
jacoco {
    //toolVersion = "0.8.8"
    reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}
jacocoTestReport {
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}

///////////////////////////////////////////////////////////////////////
// Configure Checkstyle
/////////////////////////////////////////////////////////////////////
apply plugin: 'checkstyle'
// checkstyle {
//   // Keep checkstyle a little quieter
//   ignoreFailures = true
//   showViolations = false
// }

tasks.withType(Checkstyle) {
  
  reports {
    //html.enabled = true
    //xml.enabled = false
  }
    //include '**/*.java'
    include '**/Course.java', '**/PersistentClass.java'
 }

checkstyle {
    toolVersion = "8.8"
}


///////////////////////////////////////////////////////////////////////
// Configure SpotBugs
///////////////////////////////////////////////////////////////////////
// To generate an HTML report instead of XML
// spotbugsMain {
//     reports {
//         xml.enabled = false
//         html.enabled = true
//     }
// }
// spotbugs {
//     toolVersion = '4.2.2'
//     ignoreFailures = true
//     showProgress = true
//     effort = 'max'
// }
